<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scott Codes</title>
    <description>General coding things, usually in Ruby, that come out of my head.
</description>
    <link>http://scottmatthewman.github.io/</link>
    <atom:link href="http://scottmatthewman.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 26 Aug 2015 11:01:10 +0100</pubDate>
    <lastBuildDate>Wed, 26 Aug 2015 11:01:10 +0100</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Using Bundler to add gem dependencies inline</title>
        <description>&lt;p&gt;As Rails developers, we are used to using &lt;a href=&quot;http://bundler.io&quot;&gt;Bundler&lt;/a&gt; within applications to manage Gemfile dependencies within our projects.&lt;/p&gt;

&lt;p&gt;The conventional approach is to have a &lt;code&gt;Gemfile&lt;/code&gt; in the root folder of our project, then use &lt;code&gt;bundle install&lt;/code&gt; (and associated methods) to manage downloading, installation and version control of dependencies.&lt;/p&gt;

&lt;p&gt;However, with version 1.10 of Bundler there is now a way for single-file scripts to include their own gemfile inline, and can optionally install the correct gems upon the script’s first execution.&lt;/p&gt;

&lt;p&gt;To use it, the command &lt;code&gt;require &#39;bundler/inline&#39;&lt;/code&gt; should be the first command in the file, followed by a &lt;code&gt;gemfile { ... }&lt;/code&gt; block, the contents of which follow the usual Gemfile DSL:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bundler/inline&amp;#39;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# use `gemfile(true) do...` for the script to install missing gems&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gemfile&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://rubygems.org&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;nap&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rest&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cocoapods&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;~&amp;gt; 0.34.1&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Pod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VERSION&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &amp;quot;0.34.4&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(Example from the &lt;a href=&quot;https://github.com/bundler/bundler/blob/master/lib/bundler/inline.rb&quot;&gt;&lt;code&gt;bundler/inline&lt;/code&gt; documentation&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The downside to this approach is that no &lt;code&gt;Gemfile.lock&lt;/code&gt; file is produced. As a result, we shoould probably be ultra-pessimistic when specifying version constraints on each gem.&lt;/p&gt;

&lt;p&gt;For a small utility whose function can fit into a single script file, including the utility’s gem dependencies within the same file could be useful.&lt;/p&gt;

</description>
        <pubDate>Tue, 25 Aug 2015 17:50:23 +0100</pubDate>
        <link>http://scottmatthewman.github.io/2015/08/25/using-bundler-to-add-gem-dependencies-inline.html</link>
        <guid isPermaLink="true">http://scottmatthewman.github.io/2015/08/25/using-bundler-to-add-gem-dependencies-inline.html</guid>
        
        
      </item>
    
      <item>
        <title>Optimise your Ruby logs with blocks</title>
        <description>&lt;p&gt;When adding logger statements to Ruby or Rails apps, we’re used to providing interpolated strings to whichever method matches the status level of our message:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Number of items matching our requirements: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:valid?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Whether or not this string gets output to the log is dependent on the logger instance’s &lt;code&gt;#level&lt;/code&gt; property, which can vary (say, between development and production environments).&lt;/p&gt;

&lt;p&gt;However, even if the &lt;code&gt;logger.level&lt;/code&gt; determines that the text should not be output to the log, any ruby code called by the interpolated string will still be executed.&lt;/p&gt;

&lt;p&gt;As an alternative, each of the &lt;code&gt;Logger&lt;/code&gt; class’s logging methods can take a block that returns a string. This block will only be called, and any Ruby code within will only be executed, if the severity is of a sufficient level to be output to the log:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;level&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WARN&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# String parameter - Calculated, but not displayed&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Retrieved items: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inspect&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Block - Skipped completely&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Retrieved items: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inspect&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So if your debugging messages are expensive in terms of processing, leaving them &lt;em&gt;in situ&lt;/em&gt; in production code won’t affect your application’s overall performance as long as you’re mindful of your server’s logging level.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; As &lt;a href=&quot;https://www.reddit.com/r/ruby/comments/3iddvd/using_blocks_in_your_logger_statements_to_prevent/cug2wf0&quot;&gt;Reddit user &lt;strong&gt;tomthecool&lt;/strong&gt; notes&lt;/a&gt;, there is little to no performance benefit (and may be some performance loss) if your log messages are just plain strings which you then wrap up in blocks, or where there is very little processing involved. The example code above that uses &lt;code&gt;#inspect&lt;/code&gt;, for instance, would be unlikely to benefit to any substantial degree – it serves to demonstrate the syntax difference more than anything.&lt;/p&gt;

&lt;p&gt;But I’d also suggest that logging at the debug level is where you’re more likely to want to do some more detailed analysis of the data related to the problem you’re trying to get to the bottom of. And in those cases, protecting your production code from expensive calls that have no effect on your log output could be of benefit.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;This blog post came out of &lt;a href=&quot;https://github.com/altmetric/til/blob/master/ruby/logger_blocks.md&quot;&gt;an entry&lt;/a&gt; in the &lt;a href=&quot;https://github.com/altmetric/til&quot;&gt;Altmetric TIL (Today I Learned) library&lt;/a&gt;, an open source collection of knowledge that Altmetric developers have stumbled across in our working days. Feel free to have a look around!&lt;/em&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 24 Aug 2015 13:36:09 +0100</pubDate>
        <link>http://scottmatthewman.github.io/2015/08/24/optimise-your-ruby-logs-with-blocks.html</link>
        <guid isPermaLink="true">http://scottmatthewman.github.io/2015/08/24/optimise-your-ruby-logs-with-blocks.html</guid>
        
        
      </item>
    
  </channel>
</rss>
